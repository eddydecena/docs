{
  "components": {
    "schemas": {
      "controllers.GenerateQueryBody": {
        "properties": {
          "data_source_id": {
            "type": "string"
          },
          "engine_id": {
            "type": "string"
          },
          "execute": {
            "type": "boolean"
          },
          "llm_provider_id": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "prompt": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "controllers.HTTPResponse": {
        "properties": {
          "message": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "controllers.ImproveQueryActivity": {
        "properties": {
          "data": {
            "items": {
              "additionalProperties": {},
              "type": "object"
            },
            "type": "array",
            "uniqueItems": false
          },
          "data_source_name": {
            "type": "string"
          },
          "improved_query": {
            "type": "string"
          },
          "organization_id": {
            "type": "string"
          },
          "original_query": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "controllers.ImproveQueryBody": {
        "properties": {
          "data_source_id": {
            "type": "string"
          },
          "engine_id": {
            "type": "string"
          },
          "execute": {
            "type": "boolean"
          },
          "llm_provider_id": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "query": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "datachat.DataChat": {
        "properties": {
          "created_at": {
            "type": "integer"
          },
          "created_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "organization_id": {
            "type": "string"
          },
          "updated_at": {
            "type": "integer"
          }
        },
        "required": [
          "created_at",
          "created_by",
          "name",
          "organization_id",
          "updated_at"
        ],
        "type": "object"
      },
      "datachat.DataChatUpdate": {
        "properties": {
          "name": {
            "type": "string"
          },
          "updated_at": {
            "type": "integer"
          }
        },
        "required": [
          "name",
          "updated_at"
        ],
        "type": "object"
      },
      "datachat.Prompt": {
        "properties": {
          "created_at": {
            "description": "@format date-time",
            "type": "integer"
          },
          "created_by": {
            "type": "string"
          },
          "data": {
            "items": {
              "additionalProperties": {},
              "type": "object"
            },
            "type": "array",
            "uniqueItems": false
          },
          "data_source_id": {
            "type": "string"
          },
          "data_source_name": {
            "type": "string"
          },
          "execution_status": {
            "$ref": "#/components/schemas/datachat.PromptExecutionStatus"
          },
          "message": {
            "type": "string"
          },
          "organization_id": {
            "type": "string"
          },
          "prompt": {
            "type": "string"
          },
          "query": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/datachat.PromptType"
          },
          "updated_at": {
            "description": "@format date-time",
            "type": "integer"
          }
        },
        "required": [
          "created_at",
          "created_by",
          "data_source_id",
          "data_source_name",
          "execution_status",
          "organization_id",
          "prompt",
          "query",
          "type",
          "updated_at"
        ],
        "type": "object"
      },
      "datachat.PromptExecutionStatus": {
        "type": "string",
        "x-enum-varnames": [
          "ExecutionStatusPending",
          "ExecutionStatusRunning",
          "ExecutionStatusCompleted",
          "ExecutionStatusFailed"
        ]
      },
      "datachat.PromptType": {
        "type": "string",
        "x-enum-varnames": [
          "Generate",
          "Optimize"
        ]
      },
      "datasource.DataSource": {
        "properties": {
          "name": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          },
          "synchronization_status": {
            "$ref": "#/components/schemas/datasource.SynchronizationStatus"
          },
          "type": {
            "$ref": "#/components/schemas/datasource.DataSourceType"
          }
        },
        "required": [
          "name",
          "secret",
          "synchronization_status",
          "type"
        ],
        "type": "object"
      },
      "datasource.DataSourceType": {
        "enum": [
          "PostgreSQL",
          "MySQL",
          "MariaDB"
        ],
        "type": "string",
        "x-enum-varnames": [
          "PostgreSQL",
          "MySQL",
          "MariaDB"
        ]
      },
      "datasource.SynchronizationStatus": {
        "enum": [
          "Synchronizing",
          "Synchronized",
          "Failed"
        ],
        "type": "string",
        "x-enum-varnames": [
          "Synchronizing",
          "Synchronized",
          "Failed"
        ]
      },
      "datasource.UpdateRequestDataSourceBody": {
        "properties": {
          "name": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "engine.EngineObjectCreate": {
        "properties": {
          "dsn": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "synchronization_status": {
            "$ref": "#/components/schemas/engine.EngineType"
          }
        },
        "required": [
          "dsn",
          "name",
          "synchronization_status"
        ],
        "type": "object"
      },
      "engine.EngineObjectResponse": {
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "synchronization_status": {
            "$ref": "#/components/schemas/engine.EngineType"
          }
        },
        "required": [
          "id",
          "name",
          "synchronization_status"
        ],
        "type": "object"
      },
      "engine.EngineObjectUpdate": {
        "properties": {
          "dsn": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "synchronization_status": {
            "$ref": "#/components/schemas/engine.EngineType"
          }
        },
        "required": [
          "synchronization_status"
        ],
        "type": "object"
      },
      "engine.EngineType": {
        "enum": [
          "Trino",
          "Starburst"
        ],
        "type": "string",
        "x-enum-varnames": [
          "Trino",
          "Starburst"
        ]
      },
      "llm.LLMProvider": {
        "properties": {
          "api_key": {
            "type": "string"
          },
          "created_at": {
            "type": "integer"
          },
          "created_by": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "organization_id": {
            "type": "string"
          },
          "provider": {
            "description": "Model          string             `json:\"model\" bson:\"model,omitempty\"`",
            "type": "string"
          },
          "updated_at": {
            "type": "integer"
          }
        },
        "required": [
          "api_key",
          "created_at",
          "created_by",
          "id",
          "name",
          "organization_id",
          "updated_at"
        ],
        "type": "object"
      },
      "llm.LLMProviderUpdate": {
        "properties": {
          "api_key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "updated_at": {
            "type": "integer"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "basic": {
        "scheme": "basic",
        "type": "http"
      }
    }
  },
  "info": {
    "contact": {
      "email": "dev@poligono.xyz",
      "name": "Poligono Support",
      "url": "https://www.swagger.io/support"
    },
    "description": "Democratizing data access through plain English.",
    "license": {
      "name": "GNU Affero General Public License version 3",
      "url": "https://www.gnu.org/licenses/agpl-3.0.html"
    },
    "termsOfService": "https://swagger.io/terms/",
    "title": "Poligono API",
    "version": "1.0"
  },
  "externalDocs": {
    "description": "OpenAPI",
    "url": "https://swagger.io/resources/open-api/"
  },
  "paths": {
    "/datachat": {
      "get": {
        "description": "Retrieve prompts using pagination",
        "parameters": [
          {
            "description": "Page",
            "in": "query",
            "name": "page",
            "schema": {
              "default": 1,
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/datachat.DataChat"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Retrieve prompts",
        "tags": [
          "DataChat"
        ]
      },
      "post": {
        "description": "Create a new datachat",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/datachat.DataChat"
              }
            }
          },
          "description": "DataChat",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/datachat.DataChat"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Add datachat",
        "tags": [
          "DataChat"
        ]
      }
    },
    "/datachat/{id}": {
      "get": {
        "description": "Retrieve datachat with the specified id",
        "parameters": [
          {
            "description": "DataChat id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/datachat.DataChat"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Retrieve datachat by id",
        "tags": [
          "DataChat"
        ]
      },
      "put": {
        "description": "Modify datachat",
        "parameters": [
          {
            "description": "DataChat Id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/datachat.DataChatUpdate"
              }
            }
          },
          "description": "Data Source",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/datachat.DataChat"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Modify datachat",
        "tags": [
          "DataChat"
        ]
      }
    },
    "/datasources": {
      "post": {
        "description": "Create a new data source configuration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/datasource.DataSource"
              }
            }
          },
          "description": "Data Source",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Add data source",
        "tags": [
          "Data Source"
        ]
      }
    },
    "/datasources/all": {
      "get": {
        "description": "Retrieve all data sources associated with the specified organization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/datasource.DataSource"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "List data sources",
        "tags": [
          "Data Source"
        ]
      }
    },
    "/datasources/synchronize/{id}": {
      "post": {
        "description": "Synchronize data source schemas",
        "parameters": [
          {
            "description": "Data Source Id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Synchronize data source",
        "tags": [
          "Data Source"
        ]
      }
    },
    "/datasources/{id}": {
      "delete": {
        "description": "Permanently deletes the specified data source",
        "parameters": [
          {
            "description": "Data Source Id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/datasource.DataSource"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Remove data source",
        "tags": [
          "Data Source"
        ]
      },
      "get": {
        "description": "Retrieve data source configuration with the specified id",
        "parameters": [
          {
            "description": "Data Source id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/datasource.DataSource"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Retrieve data source by id",
        "tags": [
          "Data Source"
        ]
      },
      "put": {
        "description": "Update the configuration of the specified data source",
        "parameters": [
          {
            "description": "Data Source Id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/datasource.UpdateRequestDataSourceBody"
              }
            }
          },
          "description": "Data Source",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/datasource.DataSource"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Modify data source",
        "tags": [
          "Data Source"
        ]
      }
    },
    "/engine": {
      "post": {
        "description": "Create a new Engine configuration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/engine.EngineObjectCreate"
              }
            }
          },
          "description": "Engine",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Add engine",
        "tags": [
          "Engine"
        ]
      }
    },
    "/engine/all": {
      "get": {
        "description": "Retrieve all Engines associated with the specified organization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/engine.EngineObjectResponse"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "List engines",
        "tags": [
          "Engine"
        ]
      }
    },
    "/engine/{id}": {
      "delete": {
        "description": "Permanently deletes the specified engine",
        "parameters": [
          {
            "description": "Engine Id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/engine.EngineObjectResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Remove engine",
        "tags": [
          "Engine"
        ]
      },
      "get": {
        "description": "Retrieve Engine configuration with the specified id",
        "parameters": [
          {
            "description": "Engine Id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/engine.EngineObjectResponse"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Retrieve engine by id",
        "tags": [
          "Engine"
        ]
      },
      "put": {
        "description": "Update the configuration of the specified Engine",
        "parameters": [
          {
            "description": "Engine Id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/engine.EngineObjectUpdate"
              }
            }
          },
          "description": "Engine",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/engine.EngineObjectResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Modify engine",
        "tags": [
          "Engine"
        ]
      }
    },
    "/health": {
      "get": {
        "description": "API health check",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "API health check",
        "tags": [
          "Health"
        ]
      }
    },
    "/llm": {
      "post": {
        "description": "Create a new LLM Provider",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/llm.LLMProvider"
              }
            }
          },
          "description": "LLM Provider",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Add llm provider",
        "tags": [
          "LLM"
        ]
      }
    },
    "/llm/all": {
      "get": {
        "description": "Retrieve all LLM providers associated with the specified organization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/llm.LLMProvider"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "List LLM providers",
        "tags": [
          "LLM"
        ]
      }
    },
    "/llm/{id}": {
      "delete": {
        "description": "Permanently deletes the specified LLM provider",
        "parameters": [
          {
            "description": "LLM Provider Id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/llm.LLMProvider"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Remove LLM provider",
        "tags": [
          "LLM"
        ]
      },
      "get": {
        "description": "Retrieve LLM Provider configuration with the specified id",
        "parameters": [
          {
            "description": "LLM Provider Id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/llm.LLMProvider"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Retrieve LLM provider by id",
        "tags": [
          "LLM"
        ]
      },
      "put": {
        "description": "Update the configuration of the specified LLM Provider",
        "parameters": [
          {
            "description": "LLM Provider Name",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/llm.LLMProviderUpdate"
              }
            }
          },
          "description": "LLM Provider",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/llm.LLMProvider"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Modify LLM provider",
        "tags": [
          "LLM"
        ]
      }
    },
    "/prompts": {
      "get": {
        "description": "Retrieve prompts using pagination",
        "parameters": [
          {
            "description": "Page",
            "in": "query",
            "name": "page",
            "schema": {
              "default": 1,
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/datachat.Prompt"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Retrieve prompts",
        "tags": [
          "Prompt"
        ]
      }
    },
    "/prompts/generate": {
      "post": {
        "description": "Generate an SQL query based on a natural language prompt",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/controllers.GenerateQueryBody"
              }
            }
          },
          "description": "Prompt Object",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/datachat.Prompt"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Generate Query",
        "tags": [
          "Core"
        ]
      }
    },
    "/prompts/improve": {
      "post": {
        "description": "Improve an SQL query based on a natural language prompt",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/controllers.ImproveQueryBody"
              }
            }
          },
          "description": "Prompt Object",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.ImproveQueryActivity"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/controllers.HTTPResponse"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Improve Query",
        "tags": [
          "Core"
        ]
      }
    }
  },
  "openapi": "3.1.0"
}